from typing import Callable, Dict, Any, Awaitable
from aiogram import BaseMiddleware
from aiogram.types import Message
import database as db
import keyboards as kb
from config import ADMIN_ID

PUBLIC_COMMANDS = ['start', 'help', 'newplan', 'subscribe', 'grant']

class SubscriptionMiddleware(BaseMiddleware):
    async def __call__(
        self,
        handler: Callable[[Message, Dict[str, Any]], Awaitable[Any]],
        event: Message,
        data: Dict[str, Any]
    ) -> Any:
        user_id = event.from_user.id

        if str(user_id) == ADMIN_ID:
            return await handler(event, data)

        if event.text and event.text.startswith('/'):
            command = event.text[1:].split()[0]
            if command in PUBLIC_COMMANDS:
                return await handler(event, data)

        status, expiry_date = await db.get_user_subscription_status(user_id)

        if status in ['trial', 'active']:
            return await handler(event, data)
        else:
            text = "–ù–∞ –∂–∞–ª—å, –≤–∞—à –¥–æ—Å—Ç—É–ø –¥–æ —Ñ—É–Ω–∫—Ü—ñ–π –±–æ—Ç–∞ –æ–±–º–µ–∂–µ–Ω–æ. üò•\n\n"
            if status == 'trial':
                 text = "–í–∞—à –±–µ–∑–∫–æ—à—Ç–æ–≤–Ω–∏–π 7-–¥–µ–Ω–Ω–∏–π –ø–µ—Ä—ñ–æ–¥ –∑–∞–∫—ñ–Ω—á–∏–≤—Å—è. –©–æ–± –ø—Ä–æ–¥–æ–≤–∂–∏—Ç–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—Ç–∏—Å—å —É—Å—ñ–º–∞ –ø–µ—Ä–µ–≤–∞–≥–∞–º–∏, –±—É–¥—å –ª–∞—Å–∫–∞, –æ—Ñ–æ—Ä–º—ñ—Ç—å –ø—ñ–¥–ø–∏—Å–∫—É.\n\n"
            elif status == 'expired':
                text = "–¢–µ—Ä–º—ñ–Ω –¥—ñ—ó –≤–∞—à–æ—ó –ø—ñ–¥–ø–∏—Å–∫–∏ –∑–∞–∫—ñ–Ω—á–∏–≤—Å—è. –ë—É–¥—å –ª–∞—Å–∫–∞, –ø–æ–Ω–æ–≤—ñ—Ç—å —ó—ó, —â–æ–± –ø—Ä–æ–¥–æ–≤–∂–∏—Ç–∏.\n\n"
            
            text += "–¶–µ –¥–∞—Å—Ç—å –≤–∞–º –¥–æ—Å—Ç—É–ø –¥–æ –ø–µ—Ä—Å–æ–Ω–∞–ª—ñ–∑–æ–≤–∞–Ω–∏—Ö –ø–ª–∞–Ω—ñ–≤, –ø–æ—Ä–∞–¥, —á–µ–ª–µ–Ω–¥–∂—ñ–≤ —Ç–∞ –±–∞–≥–∞—Ç–æ —ñ–Ω—à–æ–≥–æ!"
            await event.answer(text, reply_markup=kb.subscribe_kb)
            return

