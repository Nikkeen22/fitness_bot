import database as db
from aiogram import Bot
from config import GROUP_ID
from utils.safe_sender import send_message_safely

SIGNIFICANT_ACHIEVEMENTS = ['marathoner', 'stability']

ACHIEVEMENTS = {
    'novice': {'name': 'üéì –ù–æ–≤–∞—á–æ–∫', 'description': '–°—Ç–≤–æ—Ä–∏–ª–∏ —Å–≤—ñ–π –ø–µ—Ä—à–∏–π —Ñ—ñ—Ç–Ω–µ—Å-–ø–ª–∞–Ω!'},
    'first_step': {'name': 'üöÄ –ü–µ—Ä—à–∏–π –∫—Ä–æ–∫', 'description': '–í–∏–∫–æ–Ω–∞–ª–∏ —Å–≤–æ—î –ø–µ—Ä—à–µ —Ç—Ä–µ–Ω—É–≤–∞–Ω–Ω—è!'},
    'stability': {'name': '‚öñÔ∏è –°—Ç–∞–±—ñ–ª—å–Ω—ñ—Å—Ç—å', 'description': '3 —Ç—Ä–µ–Ω—É–≤–∞–Ω–Ω—è –∑–∞ –æ—Å—Ç–∞–Ω–Ω—ñ 7 –¥–Ω—ñ–≤!'},
    'chef': {'name': 'üë®‚Äçüç≥ –®–µ—Ñ-–∫—É—Ö–∞—Ä', 'description': '–í–∏–∫–æ—Ä–∏—Å—Ç–∞–ª–∏ —Ñ—É–Ω–∫—Ü—ñ—é –≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó —Ä–µ—Ü–µ–ø—Ç—ñ–≤.'},
    'marathoner': {'name': 'üèÉ‚Äç‚ôÇÔ∏è –ú–∞—Ä–∞—Ñ–æ–Ω–µ—Ü—å', 'description': '–í–∏ –∑ –Ω–∞–º–∏ –≤–∂–µ —Ü—ñ–ª–∏–π –º—ñ—Å—è—Ü—å!'},
    'challenger': {'name': 'üéØ –ß–µ–ª–µ–Ω–¥–∂–µ—Ä', 'description': '–ü—Ä–∏–π–Ω—è–ª–∏ —Å–≤—ñ–π –ø–µ—Ä—à–∏–π –≤–∏–∫–ª–∏–∫!'}
}

async def check_and_grant_achievement(user_id: int, achievement_id: str, bot: Bot):
    if not await db.has_achievement(user_id, achievement_id):
        await db.grant_achievement(user_id, achievement_id)
        achievement = ACHIEVEMENTS[achievement_id]
        
        # –ù–∞–¥—Å–∏–ª–∞—î–º–æ –æ—Å–æ–±–∏—Å—Ç–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
        await send_message_safely(bot, user_id, f"üéâ **–ù–æ–≤–µ –¥–æ—Å—è–≥–Ω–µ–Ω–Ω—è!** üéâ\n\n–í–∏ –æ—Ç—Ä–∏–º–∞–ª–∏ –∞—á—ñ–≤–∫—É: **{achievement['name']}**\n_{achievement['description']}_")

        # --- –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è —É —Å–ø—ñ–ª—å–Ω–æ—Ç—É ---
        if GROUP_ID:
            try:
                user_info = await bot.get_chat(user_id)
                username = f"@{user_info.username}" if user_info.username else user_info.full_name
                group_message = (
                    f" <b>–ù–æ–≤–µ –¥–æ—Å—è–≥–Ω–µ–Ω–Ω—è!</b> \n\n"
                    f"{username} –æ—Ç—Ä–∏–º–∞–≤(–ª–∞) –∞—á—ñ–≤–∫—É: <b>{achievement['name']}</b>\n"
                    f"<i>{achievement['description']}</i>"
                )
                await send_message_safely(bot, int(GROUP_ID), group_message, parse_mode="HTML")
            except Exception as e:
                import traceback
                print(f"–ù–µ –≤–¥–∞–ª–æ—Å—è –≤—ñ–¥–ø—Ä–∞–≤–∏—Ç–∏ —É –≥—Ä—É–ø—É: {e}")
                traceback.print_exc()


async def check_workout_achievements(user_id: int, bot: Bot):
    if await db.count_total_workouts(user_id) == 1:
        await check_and_grant_achievement(user_id, 'first_step', bot)
    if await db.count_workouts_last_n_days(user_id, 7) >= 3:
        await check_and_grant_achievement(user_id, 'stability', bot)

